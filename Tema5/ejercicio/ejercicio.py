"""
EJERCICIOS PR츼CTICOS - FUNCIONES, CONDICIONALES Y BUCLES 游냀

Instrucciones:
1. Completa cada ejercicio en el espacio designado
2. Ejecuta el archivo para verificar tus respuestas
3. Las soluciones se encuentran al final del archivo
"""

# ====================
# EJERCICIO 1: Funciones b치sicas
# ====================
# Crea una funci칩n llamada 'saludar' que:
# - Reciba un nombre como par치metro
# - Retorne el string "춰Hola, [nombre]!"
# - Si no se proporciona nombre, que use "Visitante"

def saludar(nombre="Visitante"):
    # Tu c칩digo aqu칤
    pass

# ====================
# EJERCICIO 2: Condicionales
# ====================
# Escribe una funci칩n 'clasificar_edad' que:
# - Reciba una edad (n칰mero entero)
# - Retorne:
#   * "Ni침o" si edad < 13
#   * "Adolescente" si 13 <= edad < 18
#   * "Adulto" si 18 <= edad < 65
#   * "Adulto mayor" si edad >= 65
# - Maneje edades negativas con "Edad inv치lida"

def clasificar_edad(edad):
    # Tu c칩digo aqu칤
    pass

# ====================
# EJERCICIO 3: Bucles while
# ====================
# Completa la funci칩n 'contar_vocales' que:
# - Reciba un string
# - Use un bucle while para contar las vocales (a,e,i,o,u)
# - Retorne el total de vocales encontradas
# - Considera may칰sculas y min칰sculas

def contar_vocales(texto):
    # Tu c칩digo aqu칤
    pass

# ====================
# EJERCICIO 4: Bucles for
# ====================
# Crea una funci칩n 'tabla_multiplicar' que:
# - Reciba un n칰mero entero
# - Imprima su tabla de multiplicar del 1 al 10
# - Usa formato: "5 x 3 = 15"

def tabla_multiplicar(numero):
    # Tu c칩digo aqu칤
    pass

# ====================
# EJERCICIO 5: Funciones + Condicionales
# ====================
# Implementa una funci칩n 'calculadora' que:
# - Reciba dos n칰meros y un operador (+, -, *, /)
# - Retorne el resultado de la operaci칩n
# - Maneje divisi칩n por cero
# - Valide operadores inv치lidos

def calculadora(num1, num2, operador):
    # Tu c칩digo aqu칤
    pass

# ====================
# EJERCICIO 6: Proyecto integrador
# ====================
# Crea un sistema de login que:
# 1. Pida usuario y contrase침a (predefinidos)
# 2. D칠 3 intentos m치ximo
# 3. Use funciones para:
#    - Validar credenciales
#    - Mostrar mensajes de error/칠xito
#    - Controlar intentos restantes

def sistema_login():
    # Credenciales v치lidas
    USUARIO = "admin"
    CONTRASE칌A = "python123"
    
    # Tu implementaci칩n aqu칤
    pass

# =========================================
# ZONA DE PRUEBAS - NO MODIFICAR
# =========================================
def main():
    print("\n=== Pruebas Ejercicio 1 ===")
    print(saludar("Ana"))  # 춰Hola, Ana!
    print(saludar())       # 춰Hola, Visitante!
    
    print("\n=== Pruebas Ejercicio 2 ===")
    print(clasificar_edad(10))  # Ni침o
    print(clasificar_edad(70))  # Adulto mayor
    print(clasificar_edad(-5))  # Edad inv치lida
    
    print("\n=== Pruebas Ejercicio 3 ===")
    print(contar_vocales("Hello World"))  # 3
    print(contar_vocales("PYTHON"))      # 1
    
    print("\n=== Pruebas Ejercicio 4 ===")
    tabla_multiplicar(7)  # Debe imprimir tabla del 7
    
    print("\n=== Pruebas Ejercicio 5 ===")
    print(calculadora(5, 3, "+"))   # 8
    print(calculadora(10, 0, "/"))  # "Error: Divisi칩n por cero"
    
    print("\n=== Pruebas Ejercicio 6 ===")
    sistema_login()  # Probar con credenciales correctas/incorrectas

main()